"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class Tile(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _GeomType:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _GeomTypeEnumTypeWrapper(
        google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[
            Tile._GeomType.ValueType
        ],
        builtins.type,
    ):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        UNKNOWN: Tile._GeomType.ValueType  # 0
        POINT: Tile._GeomType.ValueType  # 1
        LINESTRING: Tile._GeomType.ValueType  # 2
        POLYGON: Tile._GeomType.ValueType  # 3

    class GeomType(_GeomType, metaclass=_GeomTypeEnumTypeWrapper):
        """GeomType is described in section 4.3.4 of the specification"""

    UNKNOWN: Tile.GeomType.ValueType  # 0
    POINT: Tile.GeomType.ValueType  # 1
    LINESTRING: Tile.GeomType.ValueType  # 2
    POLYGON: Tile.GeomType.ValueType  # 3

    @typing_extensions.final
    class Value(google.protobuf.message.Message):
        """Variant type encoding
        The use of values is described in section 4.1 of the specification
        """

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        STRING_VALUE_FIELD_NUMBER: builtins.int
        FLOAT_VALUE_FIELD_NUMBER: builtins.int
        DOUBLE_VALUE_FIELD_NUMBER: builtins.int
        INT_VALUE_FIELD_NUMBER: builtins.int
        UINT_VALUE_FIELD_NUMBER: builtins.int
        SINT_VALUE_FIELD_NUMBER: builtins.int
        BOOL_VALUE_FIELD_NUMBER: builtins.int
        string_value: builtins.str
        """Exactly one of these values must be present in a valid message"""
        float_value: builtins.float
        double_value: builtins.float
        int_value: builtins.int
        uint_value: builtins.int
        sint_value: builtins.int
        bool_value: builtins.bool
        def __init__(
            self,
            *,
            string_value: builtins.str | None = ...,
            float_value: builtins.float | None = ...,
            double_value: builtins.float | None = ...,
            int_value: builtins.int | None = ...,
            uint_value: builtins.int | None = ...,
            sint_value: builtins.int | None = ...,
            bool_value: builtins.bool | None = ...,
        ) -> None: ...
        def HasField(
            self,
            field_name: typing_extensions.Literal[
                "bool_value",
                b"bool_value",
                "double_value",
                b"double_value",
                "float_value",
                b"float_value",
                "int_value",
                b"int_value",
                "sint_value",
                b"sint_value",
                "string_value",
                b"string_value",
                "uint_value",
                b"uint_value",
            ],
        ) -> builtins.bool: ...
        def ClearField(
            self,
            field_name: typing_extensions.Literal[
                "bool_value",
                b"bool_value",
                "double_value",
                b"double_value",
                "float_value",
                b"float_value",
                "int_value",
                b"int_value",
                "sint_value",
                b"sint_value",
                "string_value",
                b"string_value",
                "uint_value",
                b"uint_value",
            ],
        ) -> None: ...

    @typing_extensions.final
    class Feature(google.protobuf.message.Message):
        """Features are described in section 4.2 of the specification"""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        ID_FIELD_NUMBER: builtins.int
        TAGS_FIELD_NUMBER: builtins.int
        TYPE_FIELD_NUMBER: builtins.int
        GEOMETRY_FIELD_NUMBER: builtins.int
        id: builtins.int
        @property
        def tags(
            self,
        ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[
            builtins.int
        ]:
            """Tags of this feature are encoded as repeated pairs of
            integers.
            A detailed description of tags is located in sections
            4.2 and 4.4 of the specification
            """
        type: global___Tile.GeomType.ValueType
        """The type of geometry stored in this feature."""
        @property
        def geometry(
            self,
        ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[
            builtins.int
        ]:
            """Contains a stream of commands and parameters (vertices).
            A detailed description on geometry encoding is located in
            section 4.3 of the specification.
            """
        def __init__(
            self,
            *,
            id: builtins.int | None = ...,
            tags: collections.abc.Iterable[builtins.int] | None = ...,
            type: global___Tile.GeomType.ValueType | None = ...,
            geometry: collections.abc.Iterable[builtins.int] | None = ...,
        ) -> None: ...
        def HasField(
            self, field_name: typing_extensions.Literal["id", b"id", "type", b"type"]
        ) -> builtins.bool: ...
        def ClearField(
            self,
            field_name: typing_extensions.Literal[
                "geometry", b"geometry", "id", b"id", "tags", b"tags", "type", b"type"
            ],
        ) -> None: ...

    @typing_extensions.final
    class Layer(google.protobuf.message.Message):
        """Layers are described in section 4.1 of the specification"""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        VERSION_FIELD_NUMBER: builtins.int
        NAME_FIELD_NUMBER: builtins.int
        FEATURES_FIELD_NUMBER: builtins.int
        KEYS_FIELD_NUMBER: builtins.int
        VALUES_FIELD_NUMBER: builtins.int
        EXTENT_FIELD_NUMBER: builtins.int
        version: builtins.int
        """Any compliant implementation must first read the version
        number encoded in this message and choose the correct
        implementation for this version number before proceeding to
        decode other parts of this message.
        """
        name: builtins.str
        @property
        def features(
            self,
        ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
            global___Tile.Feature
        ]:
            """The actual features in this tile."""
        @property
        def keys(
            self,
        ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[
            builtins.str
        ]:
            """Dictionary encoding for keys"""
        @property
        def values(
            self,
        ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
            global___Tile.Value
        ]:
            """Dictionary encoding for values"""
        extent: builtins.int
        """Although this is an "optional" field it is required by the specification.
        See https://github.com/mapbox/vector-tile-spec/issues/47
        """
        def __init__(
            self,
            *,
            version: builtins.int | None = ...,
            name: builtins.str | None = ...,
            features: collections.abc.Iterable[global___Tile.Feature] | None = ...,
            keys: collections.abc.Iterable[builtins.str] | None = ...,
            values: collections.abc.Iterable[global___Tile.Value] | None = ...,
            extent: builtins.int | None = ...,
        ) -> None: ...
        def HasField(
            self,
            field_name: typing_extensions.Literal[
                "extent", b"extent", "name", b"name", "version", b"version"
            ],
        ) -> builtins.bool: ...
        def ClearField(
            self,
            field_name: typing_extensions.Literal[
                "extent",
                b"extent",
                "features",
                b"features",
                "keys",
                b"keys",
                "name",
                b"name",
                "values",
                b"values",
                "version",
                b"version",
            ],
        ) -> None: ...

    LAYERS_FIELD_NUMBER: builtins.int
    @property
    def layers(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___Tile.Layer
    ]: ...
    def __init__(
        self,
        *,
        layers: collections.abc.Iterable[global___Tile.Layer] | None = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["layers", b"layers"]
    ) -> None: ...

global___Tile = Tile
